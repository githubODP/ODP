@using ODP.Web.UI.Extensions
@model PagedResult<ODP.Web.UI.Models.Cooperacao.TermoCooperacaoViewModel>

@{
    var alertas = ViewBag.Alertas as List<ODP.Web.UI.Models.Cooperacao.TermoCooperacaoViewModel>;
}

<nav class="navbar bg-light-blue">
    <div class="row ml-5">
        <!-- Formulário de busca -->
        <form method="get" action="@Url.Action("Index")" class="d-flex flex-wrap align-items-center gap-3 w-100">

            <!-- Campo de pesquisa única -->
            <div class="form-group">
                <label for="searchTerm">Pesquisar:</label>
                <input type="text"
                       id="searchTerm"
                       name="termo"
                       value="@ViewBag.TermoAtual"
                       class="form-control"
                       placeholder="Digite sua Busca" />
            </div>

            <!-- Botão Pesquisar -->
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">
                    Pesquisar
                </button>
            </div>
        </form>
    </div>
</nav>

<div class="container-fluid pt-lg-5">
    <div class="table-responsive shadow">
        <div class="table-wrapper">
    <div class="table-title">
        <div class="row">
            <div class="col-sm-6">
                <h2>Termos de <b>Cooperação</b></h2>
            </div>
            
            <div class="col-sm-6 d-flex justify-content-end align-items-center">
                @if (alertas != null && alertas.Count > 0)
                {
                    <div class="dropdown mr-3">
                        <button class="btn btn-warning dropdown-toggle" type="button" id="notificationDropdown"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-bell"></i>
                            <span class="badge badge-danger">@alertas.Count</span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-right p-3" aria-labelledby="notificationDropdown"
                             style="min-width: 400px; max-height: 500px; overflow-y: auto;">
                            <h6 class="dropdown-header text-danger">
                                <i class="fas fa-exclamation-triangle"></i>
                                Termos próximos do vencimento
                            </h6>
                            @foreach (var alerta in alertas)
                            {
                                <div class="dropdown-item d-flex flex-column mb-2 p-2 alert-item">
                                    <div class="d-flex justify-content-between">
                                        <small class="text-muted">#@alerta.Protocolo</small>
                                        <span class="badge @GetBadgeClass(alerta.DiasRestantes)">
                                            @alerta.DiasRestantes dias
                                        </span>
                                    </div>
                                    <div class="font-weight-bold">@alerta.NroTermo</div>
                                    <div class="text-sm">
                                        <span>Vencimento: @alerta.FimVigencia.ToString("dd/MM/yyyy")</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }

                <a asp-controller="Cooperacao" asp-action="Create" class="btn btn-success">
                    <img src="~/svg/adicionar.svg" width="20" height="20" class="d-inline-block align-top" alt="Adicionar">
                    <span class="m-1">Novo</span>
                </a>
            </div>
        </div>
    </div>

    <div>

         @if (Model != null && Model.Results.Any())
            {
          <table id="tabelaPrincipal" class="table table-striped table-hover" style="width:100%; table-layout: auto;">

            <thead>
                <tr>
                    <th style="width: 10%;">@Html.DisplayNameFor(model => model.Results.FirstOrDefault().Protocolo)</th>
                    <th>@Html.DisplayNameFor(model => model.Results.FirstOrDefault().Orgao)</th>
                    <th>@Html.DisplayNameFor(model => model.Results.FirstOrDefault().NroTermo)</th>
                    <th>@Html.DisplayNameFor(model => model.Results.FirstOrDefault().InicioVigencia)</th>
                    <th>@Html.DisplayNameFor(model => model.Results.FirstOrDefault().FimVigencia)</th>
                    <th>Dias Restantes</th> 
                    <th>@Html.DisplayNameFor(model => model.Results.FirstOrDefault().Status)</th>
                    <th>Opções</th>
                </tr>
            </thead>
            <tbody id="tabelaCorpo">
                @foreach (var item in Model.Results)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Protocolo)</td>
                        <td>@Html.DisplayFor(modelItem => item.Orgao)</td>
                        <td>@Html.DisplayFor(modelItem => item.NroTermo)</td>
                        <td>@item.InicioVigencia.ToString("dd/MM/yyyy")</td>
                        <td>@item.FimVigencia.ToString("dd/MM/yyyy")</td>
                        <td>@item.DiasRestantes</td>
                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>
                            <div class="d-flex">
                                <a asp-controller="Cooperacao" asp-action="Editar" asp-route-id="@item.Id" class="btn btn-primary mr-2">
                                    <img src="~/svg/editar.svg" height="16" />
                                </a>
                                <a asp-controller="Cooperacao" asp-action="Detalhes" asp-route-id="@item.Id" class="btn btn-info mr-2">
                                    <img src="~/svg/vizualizar.svg" height="16" />
                                </a>
                                <a href="#" class="btn btn-danger mr-2" data-toggle="modal" data-target="#confirmDeleteModal" 
                                   data-itemid="@item.Id" data-itemname="@item.NroTermo">
                                    <img src="~/svg/excluir.svg" height="16" />
                                </a>

                                
                            </div>
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>

                }
                else
                {
                    <p>Nenhum resultado encontrado.</p>
                }
            </div>
        </div>
    </div>

    <!-- Paginação -->
    <ul class="pagination">
        @if (Model.PageNumber > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, termo = ViewBag.TermoAtual })">Anterior</a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i <= 5 || i > Model.TotalPages - 3 || (i >= Model.PageNumber - 1 && i <= Model.PageNumber + 1))
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize, termo = ViewBag.TermoAtual })">@i</a>
                </li>
            }
            else if (i == 6 || i == Model.TotalPages - 4)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }
        }

        @if (Model.PageNumber < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, termo = ViewBag.TermoAtual })">Próximo</a>
            </li>
        }
    </ul>


</div>

       
<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Tem certeza que deseja excluir este termo de cooperação?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Confirmar Exclusão</button>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $('#confirmDeleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var itemId = button.data('itemid');

                // Definindo a URL correta de exclusão
                var deleteUrl = '/Cooperacao/Excluir/' + itemId;

                // Definindo o action do formulário
                $('#deleteForm').attr('action', deleteUrl);
            });
        });
    </script>

    
}

    
    <script>

            document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.getElementById("searchTerm");
            const tabelaCorpo = document.getElementById("tabelaCorpo");

            let timeout = null;

            searchInput.addEventListener("input", function () {
                clearTimeout(timeout); // Evita múltiplas requisições rápidas
                let termo = this.value.trim();

                if (termo.length < 2) {
                    return; // 🔹 Permite digitação contínua sem travar
                }

                timeout = setTimeout(() => {
                    fetch(`/Cooperacao/Index?termo=${encodeURIComponent(termo)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error("Erro na busca"); // 🔹 Captura erro de resposta
                            }
                            return response.text();
                        })
                        .then(data => {
                            // Captura o novo <tbody> da resposta e substitui
                            const parser = new DOMParser();
                            const newDocument = parser.parseFromString(data, "text/html");
                            const novoCorpoTabela = newDocument.querySelector("#tabelaCorpo");

                            if (novoCorpoTabela) {
                                tabelaCorpo.innerHTML = novoCorpoTabela.innerHTML; // 🔹 Atualiza apenas o tbody
                            }
                        })
                        .catch(error => {
                            console.error("Erro na busca:", error);
                        });
                }, 300); // Aguarda 300ms antes de fazer a requisição
            });
        });

    </script>




@functions {
    string GetBadgeClass(int diasRestantes)
    {
        return diasRestantes switch
        {
            <= 10 => "badge-danger",
            <= 30 => "badge-warning",
            _ => "badge-secondary"
        };
    }
}