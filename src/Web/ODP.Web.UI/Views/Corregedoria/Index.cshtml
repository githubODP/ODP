@using Domain.Corregedoria.Enum
@using ODP.Web.UI.Extensions
@model PagedResult<ODP.Web.UI.Models.Corregedoria.InstauracaoViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
   
}

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE-edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />


    <title>Instauração</title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  

    <link href="/css/LayoutCCor/ccor.css" rel="stylesheet" />


    </head>
    <body>
    <nav class="navbar bg-light-blue">
        <div class="container">
            <!-- Formulário de busca e filtros -->
            <form method="get" action="@Url.Action("Index")" class="d-flex flex-wrap align-items-center gap-3 w-100">
                <!-- Filtro por Protocolo -->
                <div class="form-group me-3">
                    <label for="protocolo">Protocolo:</label>
                    <input type="text"
                           id="protocolo"
                           name="protocolo"
                           value="@ViewBag.ProtocoloAtual"
                           class="form-control"
                           placeholder="Digite o protocolo" />
                </div>

                <!-- Filtro por Ano -->
                <div class="form-group me-3">
                    <label for="ano">Ano:</label>
                    <select id="ano" name="ano" class="form-control">
                        <option value="">Todos</option>
                        @{
                            for (int i = DateTime.Now.Year; i >= 2018; i--)
                            {
                                string selected = (ViewBag.AnoAtual != null && ViewBag.AnoAtual.ToString() == i.ToString()) ? "selected" : "";
                                @Html.Raw($"<option value='{i}' {selected}>{i}</option>")
                            }
                        }
                    </select>
                </div>

                <!-- Filtro por Órgão -->
                <div class="form-group me-3">
                    <label for="orgao">Órgão:</label>
                    <select id="orgao" name="orgao" class="form-control">
                        <option value="">Todos</option>
                        @{
                            foreach (ETipoOrgao orgao in Enum.GetValues(typeof(ETipoOrgao)))
                            {
                                string selected = (ViewBag.OrgaoAtual != null && ViewBag.OrgaoAtual.ToString() == orgao.ToString()) ? "selected" : "";
                                @Html.Raw($"<option value='{orgao}' {selected}>{orgao}</option>")
                            }
                        }
                    </select>
                </div>

                <!-- Filtro por Procedimento -->
                <div class="form-group me-3">
                    <label for="procedimento">Procedimento:</label>
                    <select id="procedimento" name="procedimento" class="form-control">
                        <option value="">Todos</option>
                        @{
                            foreach (ETipoProcedimento procedimento in Enum.GetValues(typeof(ETipoProcedimento)))
                            {
                                string selected = (ViewBag.ProcedimentoAtual != null && ViewBag.ProcedimentoAtual.ToString() == procedimento.ToString()) ? "selected" : "";
                                @Html.Raw($"<option value='{procedimento}' {selected}>{procedimento}</option>")
                            }
                        }
                    </select>
                </div>

                <!-- Filtro por Decisão -->
                <div class="form-group me-3">
                    <label for="decisao">Decisão:</label>
                    <select id="decisao" name="decisao" class="form-control">
                        <option value="">Todos</option>
                        @{
                            foreach (ETipoDecisao decisao in Enum.GetValues(typeof(ETipoDecisao)))
                            {
                                string selected = (ViewBag.DecisaoAtual != null && ViewBag.DecisaoAtual.ToString() == decisao.ToString()) ? "selected" : "";
                                @Html.Raw($"<option value='{decisao}' {selected}>{decisao}</option>")
                            }
                        }
                    </select>
                </div>

                <!-- Botão Pesquisar -->
                <div>
                    <button type="submit" class="btn btn-primary">
                        Pesquisar
                    </button>
                </div>

                <!-- Botão Novo -->
                <div>
                    <a asp-controller="Corregedoria" asp-action="Create" class="btn btn-success d-flex align-items-center">
                        <img src="~/svg/adicionar.svg" width="16" height="16" alt="Adicionar" />
                        <span>Novo</span>
                    </a>
                </div>
            </form>
        </div>
    </nav>

   

    <div class="container mt-3">
        <table>
            <thead>
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().Ano)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().CNPJCPF)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().Orgao)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().Procedimento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().Protocolo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().AtoNormativo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results.FirstOrDefault().Decisao)
                    </th>

                    <th>Opções</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Results)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.Ano)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CNPJCPF)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Orgao)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Procedimento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Protocolo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AtoNormativo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Decisao)
                        </td>

                          <td>
                            <a asp-controller="Corregedoria" asp-action="Editar" asp-route-id="@item.Id" class="btn btn-primary">
                                <img src="~/svg/editar.svg" width="" height="20"/>                             
                            </a>
                            |
                            <a asp-controller="Corregedoria" asp-action="Detalhes" asp-route-id="@item.Id" class="btn btn-info">
                                <img src="~/svg/vizualizar.svg" width="" height="20"/>
                            </a>
                            @* @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }) *@
                    </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="pagination">
            @if (Model.TotalPages > 1)
            {
                <!-- Botão Anterior -->
                @if (Model.PageNumber > 1 )
                {
                    <a href="@Url.Action("Index", new {
                                            pageNumber = Model.PageNumber - 1,
                                            pageSize = Model.PageSize,
                                            ano = ViewBag.AnoAtual,
                                            orgao = ViewBag.OrgaoAtual,
                                            procedimento = ViewBag.ProcedimentoAtual,
                                            decisao = ViewBag.DecisaoAtual
                                        })" class="btn btn-light">Anterior</a>
                }

                <!-- Primeiras Páginas -->
                @for (int i = 1; i <= 3 && i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageNumber)
                    {
                        <span class="current-page">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new {
                                                pageNumber = i,
                                                pageSize = Model.PageSize,
                                                ano = ViewBag.AnoAtual,
                                                orgao = ViewBag.OrgaoAtual,
                                                procedimento = ViewBag.ProcedimentoAtual,
                                                decisao = ViewBag.DecisaoAtual
                                            })">@i</a>
                    }
                }

                <!-- Adicione "..." caso existam muitas páginas entre o início e o final -->
                @if (Model.TotalPages > 5 && Model.PageNumber > 3)
                {
                    <span>...</span>
                }

                <!-- Páginas Próximas -->
                @if (Model.PageNumber > 3 && Model.PageNumber < Model.TotalPages - 2)
                {
                    <span class="current-page">@Model.PageNumber</span>
                }

                <!-- Adicione "..." caso existam muitas páginas antes do final -->
                @if (Model.TotalPages > 5 && Model.PageNumber < Model.TotalPages - 2)
                {
                    <span>...</span>
                }

                <!-- Últimas Páginas -->
                @for (int i = Math.Max(Model.TotalPages - 2, 4); i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageNumber)
                    {
                        <span class="current-page">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new {
                                                pageNumber = i,
                                                pageSize = Model.PageSize,
                                                ano = ViewBag.AnoAtual,
                                                orgao = ViewBag.OrgaoAtual,
                                                procedimento = ViewBag.ProcedimentoAtual,
                                                decisao = ViewBag.DecisaoAtual
                                            })">@i</a>
                    }
                }

                <!-- Botão Próximo -->
                @if (Model.PageNumber < Model.TotalPages)
                {
                    <a href="@Url.Action("Index", new {
                                            pageNumber = Model.PageNumber + 1,
                                            pageSize = Model.PageSize,
                                            ano = ViewBag.AnoAtual,
                                            orgao = ViewBag.OrgaoAtual,
                                            procedimento = ViewBag.ProcedimentoAtual,
                                            decisao = ViewBag.DecisaoAtual
                                        })" class="btn btn-light">Próximo</a>
                }
            }
        </div>
    </div>
    </body>
</html>




 

    
